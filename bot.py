import random

import telebot
from telebot import types
import config
import os
import json
from pprint import pprint
import parsing

bot = telebot.TeleBot(config.TOKEN, parse_mode=None)

LIST_OF_POPULAR_COUNTRIES = ['üáπüá≠ –¢–∞–π–ª–∞–Ω–¥', 'üáπüá∑ –¢—É—Ä—Ü–∏—è', 'üáÆüá≥ –ò–Ω–¥–∏—è', 'üáØüáµ –Ø–ø–æ–Ω–∏—è', 'üá´üá∑ –§—Ä–∞–Ω—Ü–∏—è', 'üá™üá∏ –ò—Å–ø–∞–Ω–∏—è', 'üáÆüáπ –ò—Ç–∞–ª–∏—è',
                             'üá®üá≥ –ö–∏—Ç–∞–π', 'üá≤üáΩ –ú–µ–∫—Å–∏–∫–∞', 'üáÆüá© –ò–Ω–¥–æ–Ω–µ–∑–∏—è']

DICT_OF_POPULAR_COUNTRIES = {'–¢–∞–π–ª–∞–Ω–¥': '–¢–∞–π—Å–∫–∞—è', '–¢—É—Ä—Ü–∏—è': '–¢—É—Ä–µ—Ü–∫–∞—è', '–ò–Ω–¥–∏—è': '–ò–Ω–¥–∏–π—Å–∫–∞—è', '–Ø–ø–æ–Ω–∏—è': '–Ø–ø–æ–Ω—Å–∫–∞—è',
                             '–§—Ä–∞–Ω—Ü–∏—è': '–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∞—è', '–ò—Å–ø–∞–Ω–∏—è': '–ò—Å–ø–∞–Ω—Å–∫–∞—è', '–ò—Ç–∞–ª–∏—è': '–ò—Ç–∞–ª—å—è–Ω—Å–∫–∞—è',
                             '–ö–∏—Ç–∞–π': '–ö–∏—Ç–∞–π—Å–∫–∞—è', '–ú–µ–∫—Å–∏–∫–∞': '–ú–µ–∫—Å–∏–∫–∞–Ω—Å–∫–∞—è', '–ò–Ω–¥–æ–Ω–µ–∑–∏—è': '–ò–Ω–¥–æ–Ω–µ–∑–∏–π—Å–∫–∞—è'}

CURRENT_COUNTRY = ''

@bot.message_handler(commands=['start'])
def start(message):
    stic = open('stic/hello.webp', 'rb')
    bot.send_message(message.chat.id, "{0.first_name}, –≤–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç –®–µ—Ñ-–ü–æ–≤–∞—Ä üë®‚Äçüç≥".format(message.from_user))
    bot.send_sticker(message.chat.id, stic)
    bot.send_message(message.chat.id, "–î–ª—è –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è —Å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º –±–æ—Ç–∞, –ø—Ä–æ–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /help")


@bot.message_handler(commands=['help'])
def help(message):
    markup_for_help = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton('ü•ò –ì–æ—Ç–æ–≤–∫–∞ –±–ª—é–¥')
    item2 = types.KeyboardButton('üìù –ü–æ–¥—Å—á–µ—Ç –∫–∞–ª–æ—Ä–∏–π')

    markup_for_help.add(item1, item2)

    bot.send_message(message.chat.id, '–£ –±–æ—Ç–∞ –µ—Å—Ç—å –¥–≤–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:\n\n\t<b>1.–ì–æ—Ç–æ–≤–∫–∞ –±–ª—é–¥</b> ü•ò\n\t\t‚û°\t–¢—É—Ç –≤—ã –º–æ–∂–µ—Ç–µ '
                                      '–Ω–∞–π—Ç–∏ '
                                      '—Ä–µ—Ü–µ–ø—Ç—ã –¥–ª—è –±–ª—é–¥ –∏ —Å–ø–æ—Å–æ–±—ã –∏—Ö –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è\n\n\t<b>2.–ü–æ–¥—Å—á–µ—Ç '
                                      '–∫–∞–ª–æ—Ä–∏–π</b> üìù\n\t\t‚û°\t–¢—É—Ç –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å —Å–≤–æ—é –Ω–æ—Ä–º—É –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è –∫–∞–ª–æ—Ä–∏–π, '
                                      '–ª–∏–±–æ —É–∑–Ω–∞—Ç—å –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –±–ª—é–¥–∞',
                     reply_markup=markup_for_help, parse_mode="html")


@bot.message_handler(content_types=['text'])
def bot_message(message):
    global CURRENT_COUNTRY
    if message.text == 'ü•ò –ì–æ—Ç–æ–≤–∫–∞ –±–ª—é–¥':
        markup_for_cooking_dishes = types.ReplyKeyboardMarkup(resize_keyboard=True)

        item1 = types.KeyboardButton('üç¥ –ü–æ–∏—Å–∫ –±–ª—é–¥–∞')
        item2 = types.KeyboardButton('üó∫ –ö—É—Ö–Ω–∏ –º–∏—Ä–∞')
        item3 = types.KeyboardButton('üç≥ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –±–ª—é–¥')
        item4 = types.KeyboardButton('üßÑ –ü–æ–∏—Å–∫ –ø–æ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º')
        item5 = types.KeyboardButton('üîô –ù–∞–∑–∞–¥')

        markup_for_cooking_dishes.add(item1, item2, item3, item4, item5)

        bot.send_message(message.chat.id,
                         '–ì–æ—Ç–æ–≤–∫–∞ –±–ª—é–¥ –∏–º–µ–µ—Ç —Å–ª–µ–¥—É—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏:\n\n\t<b>1. –ü–æ–∏—Å–∫ –±–ª—é–¥–∞</b> üç¥\n\t\t‚û°\t–¢—É—Ç –≤—ã –º–æ–∂–µ—Ç–µ '
                         '–Ω–∞–π—Ç–∏ –ª—é–±–æ–µ –±–ª—é–¥–æ, –∫–æ—Ç–æ—Ä–æ–µ –∑–∞—Ö–æ—Ç–∏—Ç–µ.\n\n\t<b>2. –ö—É—Ö–Ω–∏ –º–∏—Ä–∞</b> '
                         'üó∫\n\t\t‚û°\t–¢—É—Ç –±—É–¥—É—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã 10 '
                         '–ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∫—É—Ö–æ–Ω—å –º–∏—Ä–∞. –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –Ω—É–∂–Ω—É—é, —Ç–æ –≤–≤–µ–¥–∏—Ç–µ: \n"–ö—É—Ö–Ω—è: '
                         '‚úè –†—É—Å—Å–∫–∞—è ‚úè"\n\n\t<b>3. –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –±–ª—é–¥</b> üç≥\n\t\t‚û°\t–¢—É—Ç –≤—ã –º–æ–∂–µ—Ç–µ '
                         '–Ω–∞–π—Ç–∏ –±–ª—é–¥–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º. –ù–∞–ø—Ä–∏–º–µ—Ä, –∑–∞–≤—Ç—Ä–∞–∫\n\n\t<b>4. –ü–æ–∏—Å–∫ –ø–æ '
                         '–∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º</b> üßÑ\n\t\t‚û°\t–¢—É—Ç –≤—ã –º–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã, –∏ –±–æ—Ç –ø–æ–¥–±–µ—Ä–µ—Ç '
                         '–¥–ª—è –≤–∞—Å –±–ª—é–¥–æ —Å–æ—Å—Ç–æ—è—â–µ–µ –∏–∑ –Ω–∏—Ö',
                         reply_markup=markup_for_cooking_dishes,
                         parse_mode='html')

    elif message.text == 'üó∫ –ö—É—Ö–Ω–∏ –º–∏—Ä–∞':
        markup_for_world_kitchens = types.ReplyKeyboardMarkup(resize_keyboard=True)

        item1 = types.KeyboardButton('üáπüá≠ –¢–∞–π–ª–∞–Ω–¥')
        item2 = types.KeyboardButton('üáπüá∑ –¢—É—Ä—Ü–∏—è')
        item3 = types.KeyboardButton('üáÆüá≥ –ò–Ω–¥–∏—è')
        item4 = types.KeyboardButton('üáØüáµ –Ø–ø–æ–Ω–∏—è')
        item5 = types.KeyboardButton('üá´üá∑ –§—Ä–∞–Ω—Ü–∏—è')
        item6 = types.KeyboardButton('üá™üá∏ –ò—Å–ø–∞–Ω–∏—è')
        item7 = types.KeyboardButton('üáÆüáπ –ò—Ç–∞–ª–∏—è')
        item8 = types.KeyboardButton('üá®üá≥ –ö–∏—Ç–∞–π')
        item9 = types.KeyboardButton('üá≤üáΩ –ú–µ–∫—Å–∏–∫–∞')
        item10 = types.KeyboardButton('üáÆüá© –ò–Ω–¥–æ–Ω–µ–∑–∏—è')
        item11 = types.KeyboardButton('üîô –ùa–∑–∞–¥')

        markup_for_world_kitchens.add(item1, item2, item3, item4, item5, item6, item7, item8, item9, item10, item11)

        bot.send_message(message.chat.id, '10 –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∫—É—Ö–æ–Ω—å –º–∏—Ä–∞ üó∫', reply_markup=markup_for_world_kitchens,
                         parse_mode='html')

    elif message.text == 'üç≥ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –±–ª—é–¥':
        markup_for_categories = types.ReplyKeyboardMarkup(resize_keyboard=True)

        item1 = types.KeyboardButton('ü•ê –í—ã–ø–µ—á–∫–∞ –∏ –¥–µ—Å–µ—Ä—Ç—ã')
        item2 = types.KeyboardButton('üç≤ –û—Å–Ω–æ–≤–Ω—ã–µ –±–ª—é–¥–∞')
        item3 = types.KeyboardButton('üç≥ –ó–∞–≤—Ç—Ä–∞–∫–∏')
        item4 = types.KeyboardButton('ü•ó –°–∞–ª–∞—Ç—ã')
        item5 = types.KeyboardButton('ü•£ –°—É–ø—ã')
        item6 = types.KeyboardButton('üçù –ü–∞—Å—Ç–∞ –∏ –ø–∏—Ü—Ü–∞')
        item7 = types.KeyboardButton('ü•™ –°—ç–Ω–¥–≤–∏—á–∏')
        item8 = types.KeyboardButton('ü•§ –ù–∞–ø–∏—Ç–∫–∏')
        item9 = types.KeyboardButton('üîô –ù–∞–∑–∞–¥')

        markup_for_categories.add(item1, item2, item3, item4, item5, item6, item7, item8, item9)

        bot.send_message(message.chat.id, '8 –∫–∞—Ç–µ–≥–æ—Ä–∏–π –±–ª—é–¥ üç≥', reply_markup=markup_for_categories, parse_mode='html')

    elif message.text == 'üç¥ –ü–æ–∏—Å–∫ –±–ª—é–¥–∞':
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –±–ª—é–¥–æ, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏. –ù–∞–ø—Ä–∏–º–µ—Ä: –±–ª–∏–Ω—ã')

    elif message.text == 'üîô –ù–∞–∑–∞–¥':
        markup_for_help = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton('ü•ò –ì–æ—Ç–æ–≤–∫–∞ –±–ª—é–¥')
        item2 = types.KeyboardButton('üìù –ü–æ–¥—Å—á–µ—Ç –∫–∞–ª–æ—Ä–∏–π')

        markup_for_help.add(item1, item2)

        bot.send_message(message.chat.id, "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –∫ –≤—ã–±–æ—Ä—É –∫–∞—Ç–µ–≥–æ—Ä–∏–∏", reply_markup=markup_for_help,
                         parse_mode='html')

    elif message.text == 'üîô –ùa–∑–∞–¥':
        markup_for_cooking_dishes = types.ReplyKeyboardMarkup(resize_keyboard=True)

        item1 = types.KeyboardButton('üç¥ –ü–æ–∏—Å–∫ –±–ª—é–¥–∞')
        item2 = types.KeyboardButton('üó∫ –ö—É—Ö–Ω–∏ –º–∏—Ä–∞')
        item3 = types.KeyboardButton('üç≥ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –±–ª—é–¥')
        item4 = types.KeyboardButton('üßÑ –ü–æ–∏—Å–∫ –ø–æ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º')
        item5 = types.KeyboardButton('üîô –ù–∞–∑–∞–¥')

        markup_for_cooking_dishes.add(item1, item2, item3, item4, item5)

        bot.send_message(message.chat.id, "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –∫ –≤—ã–±–æ—Ä—É –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏", reply_markup=markup_for_cooking_dishes,
                         parse_mode='html')

    elif message.text[:5].lower() == '–∫—É—Ö–Ω—è':
        markup_dishes_of_the_selected_country_dishes = types.ReplyKeyboardMarkup(one_time_keyboard=True,
                                                                                 resize_keyboard=True)

        country = message.text.lower()[7:]
        country = country[0].upper() + country[1:]
        CURRENT_COUNTRY = country
        list_of_countries = os.listdir('country_cuisine')
        top_ten = 0
        find_it = False

        for country_couisine in list_of_countries:
            if country == country_couisine[0:len(country)]:
                find_it = True
                with open(f'country_cuisine/{country}.json', 'r', encoding='utf-8') as f:
                    text_json = json.load(f)

                for count_of_dishes in range(len(text_json)-1):
                    top_ten += 1
                    random_dish = random.randint(0, len(text_json)-1)
                    markup_dishes_of_the_selected_country_dishes.add(
                        types.KeyboardButton("üçΩ " + text_json[random_dish]['name']))
                    if top_ten > 19:
                        break
            if find_it == True:
                break

        bot.send_message(message.chat.id, '–ü–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫—É—Ö–Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é —Å–ª–µ–¥—É—é—â–∏–µ –¥–≤–∞–¥—Ü–∞—Ç—å –±–ª—é–¥:',
                         reply_markup=markup_dishes_of_the_selected_country_dishes)
        bot.send_message(message.chat.id, '–ï—Å–ª–∏ –≤—ã –Ω–µ –Ω–∞—à–ª–∏ –Ω—É–∂–Ω–æ–µ –≤–∞–º –±–ª—é–¥–æ, —Ç–æ –Ω–∞–π–¥–∏—Ç–µ –µ–≥–æ —á–µ—Ä–µ–∑ –ø–æ–∏—Å–∫ –±–ª—é–¥–∞')


    elif message.text[:2] == 'üçΩ ':
        dish = message.text[2:]
        dir_name = 'country_cuisine'
        countries = os.listdir(dir_name)
        found_dish = False
        print(CURRENT_COUNTRY)
        if CURRENT_COUNTRY != '':
            with open(f'country_cuisine/{CURRENT_COUNTRY}.json', 'r', encoding='utf-8') as f:
                text_json = json.load(f)

            for count_of_dishes in range(len(text_json)):
                if text_json[count_of_dishes]['name'] == dish:
                    url = text_json[count_of_dishes]['url']
                    about_dish = parsing.get_data_about_dish(url)
                    break
        else:
            for country in countries:
                with open(f'country_cuisine/{country}', 'r', encoding='utf-8') as f:
                    text_json = json.load(f)

                for count_of_dishes in range(len(text_json)):
                    if text_json[count_of_dishes]['name'] == dish:
                        url = text_json[count_of_dishes]['url']
                        about_dish = parsing.get_data_about_dish(url)
                        found_dish = True
                        break
                if found_dish:
                    break

        ingredients = about_dish['ingredients']
        list_of_cooking_instuction = about_dish['cooking_instructions']
        calories = about_dish['calories']
        protein = about_dish['protein']
        fat = about_dish['fat']
        carbohydrate = about_dish['carbohydrate']
        text_for_cooking_instruction = ''
        text_for_ingredients = ''

        for steps in list_of_cooking_instuction:
            text_for_cooking_instruction += steps
            text_for_cooking_instruction += '\n'

        for step, ingredient in enumerate(ingredients):
            text_for_ingredients += str(step + 1) + '. ' + ingredient[0] + ': ' + ingredient[1] + '\n'

        text_about_calories = '–≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∞—è —Ü–µ–Ω–Ω–æ—Å—Ç—å –Ω–∞ –ø–æ—Ä—Ü–∏—é:\n\t' + str(calories) + ' –∫–∫–∞–ª\n\t' + str(protein) + ' –±–µ–ª–∫–æ–≤\n' \
                                                                                                            '\t' + \
                              str(fat) + ' –∂–∏—Ä–æ–≤\n\t' + str(carbohydrate) + ' —É–≥–ª–µ–≤–æ–¥–æ–≤\n\t '

        markup_for_help = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton('ü•ò –ì–æ—Ç–æ–≤–∫–∞ –±–ª—é–¥')
        item2 = types.KeyboardButton('üìù –ü–æ–¥—Å—á–µ—Ç –∫–∞–ª–æ—Ä–∏–π')

        markup_for_help.add(item1, item2)
        bot.send_message(message.chat.id, text_for_ingredients)
        bot.send_message(message.chat.id, text_for_cooking_instruction)
        bot.send_message(message.chat.id, text_about_calories, reply_markup=markup_for_help)


    elif message.text in LIST_OF_POPULAR_COUNTRIES:
        country_for_dict = message.text[3:]
        country = DICT_OF_POPULAR_COUNTRIES.get(country_for_dict)
        markup_dishes_of_the_selected_country_dishes = types.ReplyKeyboardMarkup(one_time_keyboard=True,
                                                                                 resize_keyboard=True)
        list_of_countries = os.listdir('country_cuisine')
        top_ten = 0
        find_it = False
        CURRENT_COUNTRY = country
        for country_couisine in list_of_countries:
            if country == country_couisine[0:len(country)]:
                find_it = True
                with open(f'country_cuisine/{country}.json', 'r', encoding='utf-8') as f:
                    text_json = json.load(f)

                for count_of_dishes in range(len(text_json)-1):
                    top_ten += 1
                    random_dish = random.randint(0, len(text_json)-1)
                    markup_dishes_of_the_selected_country_dishes.add(
                        types.KeyboardButton("üçΩ " + text_json[random_dish]['name']))
                    if top_ten > 19:
                        break
            if find_it == True:
                break

        bot.send_message(message.chat.id, '–ü–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫—É—Ö–Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é —Å–ª–µ–¥—É—é—â–∏–µ –¥–≤–∞–¥—Ü–∞—Ç—å –±–ª—é–¥:',
                         reply_markup=markup_dishes_of_the_selected_country_dishes)
        bot.send_message(message.chat.id, '–ï—Å–ª–∏ –≤—ã –Ω–µ –Ω–∞—à–ª–∏ –Ω—É–∂–Ω–æ–µ –≤–∞–º –±–ª—é–¥–æ, —Ç–æ –Ω–∞–π–¥–∏—Ç–µ –µ–≥–æ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É "–ë–ª—é–¥–æ: ‚úè –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞ ‚úè "')


    elif message.text == 'üìù –ü–æ–¥—Å—á–µ—Ç –∫–∞–ª–æ—Ä–∏–π':
        markup_gender = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup_gender.add(types.KeyboardButton('–ú—É–∂—Å–∫–æ–π'), types.KeyboardButton('–ñ–µ–Ω—Å–∫–∏–π'))

        msg = bot.send_message(message.chat.id, '–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤—ã—á–∏—Å–ª–∏—Ç—å –≤–∞—à—É –Ω–æ—Ä–º—É –∫–∞–ª–æ—Ä–∏–π, –º–Ω–µ –Ω—É–∂–Ω—ã –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ '
                                          '–¥–∞–Ω–Ω—ã–µ.\n–í–∞—à –ø–æ–ª:', reply_markup=markup_gender)

        bot.register_next_step_handler(msg, user_weight)

    else:
        markup_for_similar_dishes = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
        CURRENT_COUNTRY = ''
        dish = message.text
        dish = dish[0].upper() + dish[1:]
        dir_name = 'country_cuisine'
        countries = os.listdir(dir_name)
        find_anything = False
        limit = 0

        for country in countries:
            with open(f'country_cuisine/{country}', 'r', encoding='utf-8') as f:
                text_json = json.load(f)

            for count_of_dishes in range(len(text_json)):
                if text_json[count_of_dishes]['name'].find(dish) != -1:
                    if limit > 120:
                        break
                    markup_for_similar_dishes.add(types.KeyboardButton("üçΩ " + text_json[count_of_dishes]['name']))
                    find_anything = True
                    limit += 1
            if limit > 120:
                break

        if find_anything == True:
            bot.send_message(message.chat.id, '–ü–æ –∑–∞–ø—Ä–æ—Å—É –Ω–∞—à–µ–ª —Å–ª–µ–¥—É—é—â–∏–µ –±–ª—é–¥–∞:',
                             reply_markup=markup_for_similar_dishes)
        else:
            bot.send_message(message.chat.id, '–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é')


def user_weight(message):
    if message.text == "–ú—É–∂—Å–∫–æ–π" or message.text == "–ñ–µ–Ω—Å–∫–∏–π":
        msg = bot.send_message(message.chat.id, '–í–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–µ—Å:')




bot.infinity_polling()
